buildscript {
	repositories {
		gradlePluginPortal()
	}
	configurations.all {
		resolutionStrategy.force 'net.java.dev.javacc:javacc:6.1.2'
	}
}

plugins {
	id "ca.coglinc.javacc" version "2.4.0"
}

plugins {
	id "org.sonarqube" version "2.6.1"
}

plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

apply plugin: 'base'
apply plugin: 'java'
// apply plugin: 'findbugs'
// apply plugin: 'checkstyle'

compileJava {
	options.compilerArgs += '-proc:none'
}


//findbugs {
//	effort= "max"
//	reportLevel = "low"
//	excludeFilter = file("$rootProject.projectDir/config/findbugs/excludeFilter.xml")
//}

defaultTasks 'clean', 'build' //, 'test'

// Exclude lexer source form task
def excludeLexer(task) {
	task.exclude("**/lexer/**")
}

// Display the current version use by checkstyle plugin
def printCheckstyleVersion(){
	println("Checkstyle version: "+checkstyle.toolVersion)
}

//checkstyleMain.onlyIf() { !project.hasProperty('noCheckStyle') }
//
//checkstyleMain.doFirst() {
//	excludeLexer(checkstyleMain)
//}
//
//checkstyleMain.doLast() {
//	printCheckstyleVersion()
//}
//
//checkstyleTest.onlyIf() { !project.hasProperty('noCheckStyle') }
//
//checkstyleTest.doFirst(){
//	excludeLexer(checkstyleTest)
//}
//
//checkstyleTest.doLast(){
//	printCheckstyleVersion()
//}

group = 'com.graphql-java.tutorial'
version = '3.9.0'

jar {
	manifest {
		attributes 'Implementation-Title': 'Gradle Quickstart',
				'Implementation-Version': archiveVersion,
				'Built-By': 'Tomas Trescak',
				'Premain-Class': 'fr.uga.pddl4j.util.MemoryAgent',
				'Main-Class': 'fr.uga.pddl4j.planners.statespace.StateSpacePlannerFactory'
	}
}

bootJar {
	manifest {
		attributes 'Implementation-Title': 'Gradle Quickstart',
				'Implementation-Version': archiveVersion,
				'Built-By': 'Tomas Trescak',
				'Premain-Class': 'fr.uga.pddl4j.util.MemoryAgent',
				'Main-Class': 'fr.uga.pddl4j.planners.statespace.StateSpacePlannerFactory'
	}
}

//jar {
//	manifest {
//		attributes 'Implementation-Title': 'Gradle Quickstart',
//				'Implementation-Version': archiveVersion,
//				'Gradle-Version':'Gradle 8.0',
//				'Built-By': 'Damien Pellier',
//				'Premain-Class': 'fr.uga.pddl4j.util.MemoryAgent',
//				'Main-Class': 'fr.uga.pddl4j.planners.statespace.StateSpacePlannerFactory'
//	}
////	doFirst {
////		 //{ from: zipTree(it) }
////		 from { false { it.isDirectory() ? it : zipTree(it) } }
////	}
//}

task run (type: JavaExec, dependsOn: build){
	if (project.hasProperty("Args")) {
		println("arguments list : " + Args)
		args(Args.split(','))
	}

	jvmArgs = [
			"-javaagent:"+project.buildDir.name+"/libs/"+project.name+"-"+project.version+".jar",
			"-server", "-Xms2048m", "-Xmx2048m"]

	description = "Run HSP planning algorithm"
	mainClass = "fr.uga.pddl4j.planners.statespace.StateSpacePlannerFactory"
	classpath = sourceSets.main.runtimeClasspath
}


sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'com.graphql-java:graphql-java:11.0' // NEW
	implementation 'com.graphql-java:graphql-java-spring-boot-starter-webmvc:1.0' // NEW
	implementation 'com.google.guava:guava:26.0-jre' // NEW
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

compileJavacc {
	arguments = [debug_parser: 'false']
	inputDirectory = file('src/main/java/fr/uga/pddl4j/parser/lexer/')
	outputDirectory = file('src/main/java/fr/uga/pddl4j/parser/lexer/')
}
